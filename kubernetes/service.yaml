# DreamRoute Service
# Exposes the DreamRoute application pods via a LoadBalancer with SSL termination
apiVersion: v1
kind: Service
metadata:
  name: service
  labels:
    app: dreamroute
    tier: backend
  annotations:
    # AWS Load Balancer SSL certificate configuration
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
    # Configure backend protocol as HTTP (SSL terminates at load balancer)
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    # Specify which ports should use SSL
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    # Cert-manager configuration for automatic certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  # Use LoadBalancer to expose service externally
  type: LoadBalancer
  ports:
  # HTTP port configuration
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  # HTTPS port configuration (SSL terminated at load balancer)
  - port: 443
    targetPort: 8080
    protocol: TCP
    name: https
  # Select pods with these labels
  selector:
    app: dreamroute
    tier: backend